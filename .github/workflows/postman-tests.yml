name: Postman Tests

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight
  workflow_dispatch:  # Allows manual trigger

jobs:
  postman-tests:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3
        
      # Install Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Install Newman and dependencies
      - name: Install Newman and Dependencies
        run: |
          npm install -g newman
          npm install -g newman-reporter-htmlextra

      # Create environment file for tests
      - name: Create Test Environment
        run: |
          # Copy the existing environment file
          cp postman/environment.json test_env.json

          # Update the environment variables
          jq --arg protocol "https" \
             --arg host "gp-api-dev.goodparty.org" \
             --arg port "" \
             --arg email "${{ secrets.ADMIN_EMAIL }}" \
             --arg password "${{ secrets.ADMIN_PASSWORD }}" \
             '(.values[] | select(.key == "protocol").value) = $protocol |
              (.values[] | select(.key == "host").value) = $host |
              (.values[] | select(.key == "port").value) = $port |
              (.values[] | select(.key == "testAdminUserEmail").value) = $email |
              (.values[] | select(.key == "testUserPassword").value) = $password' \
             test_env.json > updated_env.json

      # Create results directory
      - name: Create Results Directory
        run: mkdir -p testResults

      # Run All Collections
      - name: Run All Collections
        env:
          POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
        run: |
          # Array of collection IDs
          declare -A collections=(
            ["Admin"]="${{ secrets.ADMIN_COLLECTION_ID }}"
            ["Health"]="${{ secrets.HEALTH_COLLECTION_ID }}"
            # Add other collections as needed
          )
          
          # Run each collection
          for name in "${!collections[@]}"; do
            collection_id=${collections[$name]}
            echo "Running collection: $name"
            newman run "https://api.getpostman.com/collections/${collection_id}?apikey=${{ secrets.POSTMAN_API_KEY }}" \
              -e updated_env.json \
              --reporters cli,json,htmlextra \
              --reporter-json-export "testResults/${name// /_}-report.json" \
              --reporter-htmlextra-export "testResults/${name// /_}-report.html" \
              --suppress-exit-code || true
          done

      # Upload test results as artifacts
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: testResults
