model BlogArticleMeta {
  createdAt  DateTime? @default(now()) @map("created_at")
  updatedAt  DateTime? @updatedAt @map("updated_at")
  id         String    @id @default(cuid())
  slug       String    @unique
  content    Content   @relation(fields: [contentId], references: [id], onDelete: Cascade)
  contentId  String    @map("content_id")
  title      String
  summary    String
  /// [BlogArticleAuthor]
  author     Json      @db.JsonB
  /// [BlogArticleTags]
  tags       Json      @default("[]") @db.JsonB
  /// [BlogArticleMainImage]
  mainImage  Json      @map("main_image") @db.JsonB
  /// [BlogArticleSection]
  section    Json      @db.JsonB
  /// [BlogArticleReferences]
  references Json      @default("[]") @db.JsonB

  // TODO: This needs another mapping model. If anyone ever deletes an article that happens to be related to another article, this will break.
  relatedArticleIds String[] @default([]) @map("related_article_ids")

  @@map("blog_article_meta")
}
