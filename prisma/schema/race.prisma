enum LevelType {
  city
  county
  state
  federal
}

model Race {
  id             Int           @id @default(autoincrement())
  ballotId       String        @unique @map("ballot_id")
  ballotHashId   String?       @map("ballot_hash_id")
  hashId         String        @unique @map("hash_id")
  positionSlug   String        @map("position_slug")
  state          String        @db.Char(2)
  electionDate   DateTime?     @map("election_date")
  level          LevelType
  subAreaName    String        @map("sub_area_name")
  subAreaValue   String        @map("sub_area_value")
  /// [RaceData]
  data           Json          @default("{}") @db.JsonB
  county         County?       @relation(fields: [countyId], references: [id])
  countyId       Int?          @map("county_id")
  municipality   Municipality? @relation(fields: [municipalityId], references: [id])
  municipalityId Int?          @map("municipality_id")

  @@map("race")
}

model County {
  id             Int            @id @default(autoincrement())
  slug           String         @unique
  name           String
  state          String         @db.Char(2)
  data           Json?          @default("{}") @db.JsonB
  municipalities Municipality[]
  races          Race[]

  @@map("county")
}

enum MunicipalityType {
  city
  village
  town
  township
}

model Municipality {
  id       Int              @id @default(autoincrement())
  slug     String           @unique
  name     String
  type     MunicipalityType
  state    String           @db.Char(2)
  /// [MunicipalityData]
  data     Json?            @default("{}") @db.JsonB
  county   County?          @relation(fields: [countyId], references: [id])
  countyId Int?             @map("county_id")
  races    Race[]

  @@map("municipality")
}

model CensusEntity {
  id        Int    @id @default(autoincrement())
  mtfcc     String
  mtfccType String @map("mtfcc_type")
  geoId     String @map("geo_id")
  name      String
  state     String

  @@map("census_entity")
}
