enum WebsiteDomainStatus {
  pending // awaiting payment
  submitted // sent to aws, waiting for registration to complete
  registered // registered with aws, waiting for DNS to be configured
  active
  inactive
}

enum WebsiteStatus {
  published
  unpublished
}

model Website {
  id                Int                  @id @default(autoincrement())
  createdAt         DateTime             @default(now()) @map("created_at")
  updatedAt         DateTime             @updatedAt @map("updated_at")
  campaignId        Int                  @unique @map("campaign_id")
  campaign          Campaign             @relation(fields: [campaignId], references: [id], onDelete: Cascade)
  status            WebsiteStatus        @default(unpublished)
  vanityPath        String               @unique @map("vanity_path")
  /// [WebsiteContent]
  content           Json?                @default("{}") @db.JsonB
  domainStatus      WebsiteDomainStatus? @map("domain_status")
  domain            String?              @unique
  domainOperationId String?              @map("domain_operation_id")

  @@map("website")
}
