// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// enable prismaSchemaFolder feature

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
  // previewFeatures = ["prismaSchemaFolder"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ContentType {
  aiChatPrompt
  aiContentTemplate
  articleCategory
  blogArticle
  blogHome
  blogSection
  candidateTestimonial
  election
  faqArticle
  faqOrder
  glossaryItem
  goodPartyTeamMembers
  onboardingPrompts
  pledge
  privacyPage
  promptInputFields
  redirects
  teamMember
  teamMilestone
  termsOfService
}

model Content {
  createdAt DateTime?   @default(now()) @map("created_at")
  updatedAt DateTime?   @updatedAt @map("updated_at")
  id        String      @id
  type      ContentType
  data      Json        @db.JsonB

  @@index([type])
  @@map("content")
}

model Race {
  id             String        @id @default(cuid())
  ballotId       String        @unique
  ballotHashId   String?
  hashId         String        @unique
  positionSlug   String?
  state          String        @db.Char(2)
  electionDate   DateTime?
  level          String
  subAreaName    String?
  subAreaValue   String?
  data           Json?
  county         County?       @relation(fields: [countyId], references: [id])
  countyId       String?
  municipality   Municipality? @relation(fields: [municipalityId], references: [id])
  municipalityId String?
}

model County {
  id             String         @id @default(cuid())
  slug           String         @unique
  name           String
  state          String         @db.Char(2)
  data           Json?
  municipalities Municipality[]
  races          Race[]
}

model Municipality {
  id       String  @id @default(cuid())
  slug     String  @unique
  name     String
  type     String
  state    String  @db.Char(2)
  data     Json?
  county   County? @relation(fields: [countyId], references: [id])
  countyId String?
  races    Race[]
}
